[{"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/index.js":"1","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/reportWebVitals.js":"2","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/App.js":"3","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/data.js":"4","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Player.js":"5","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Library.js":"6","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Song.js":"7","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Nav.js":"8","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/LibrarySong.js":"9"},{"size":478,"mtime":1607956609000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607955447000,"results":"12","hashOfConfig":"11"},{"size":2480,"mtime":1609086786000,"results":"13","hashOfConfig":"11"},{"size":2143,"mtime":1608034227000,"results":"14","hashOfConfig":"11"},{"size":3017,"mtime":1609085783000,"results":"15","hashOfConfig":"11"},{"size":699,"mtime":1608632450000,"results":"16","hashOfConfig":"11"},{"size":350,"mtime":1609086155000,"results":"17","hashOfConfig":"11"},{"size":396,"mtime":1608632450000,"results":"18","hashOfConfig":"11"},{"size":903,"mtime":1609084981000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1xxz3e8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/index.js",[],["41","42"],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/reportWebVitals.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/App.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/data.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Player.js",["43"],"import { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  songInfo,\n  setSongInfo,\n  audioRef,\n  isPlaying,\n  playSongHandler,\n  setIsPlaying,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  //use useEffect\n  useEffect(() => {\n    const newSongs = songs.map((el) => {\n      if (currentSong.id === el.id) {\n        return {\n          ...el,\n          active: true,\n        };\n      } else {\n        return {\n          ...el,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n  //Event handlers\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if (currentIndex === 0) {\n        await setCurrentSong(songs[songs.length - 1]);\n      } else {\n        await setCurrentSong(songs[currentIndex - 1]);\n      }\n    }\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  //animation Percentage\n  const animationPercentage = (songInfo.currentTime / songInfo.duration) * 100;\n  const trackAnim = {\n    transform: `translateX(${animationPercentage}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <h1>Player</h1>\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime || 0}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Library.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Song.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/Nav.js",[],"/Volumes/MyDisk/Projects/WebDev/music-app/react-player/src/components/LibrarySong.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":38,"column":6,"nodeType":"52","endLine":38,"endColumn":19,"suggestions":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["58"],["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"61","text":"62"},[690,703],"[currentSong, setSongs, songs]"]